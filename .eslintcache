[{"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\index.tsx":"1","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\App.tsx":"2","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\index.tsx":"4","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\styles.ts":"5","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\index.tsx":"6","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\index.tsx":"7","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\styles.ts":"8","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\styles.ts":"9","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts":"11","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\utils\\getValidationErrors.ts":"12","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx":"13","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\services\\api.ts":"14","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx":"15","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts":"16","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\index.tsx":"17","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\auth.tsx":"18","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\toast.tsx":"19","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"20","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"21"},{"size":198,"mtime":1608599341133,"results":"22","hashOfConfig":"23"},{"size":321,"mtime":1613161581201,"results":"24","hashOfConfig":"23"},{"size":516,"mtime":1608595910948,"results":"25","hashOfConfig":"23"},{"size":2438,"mtime":1613162980297,"results":"26","hashOfConfig":"23"},{"size":1493,"mtime":1608939489956,"results":"27","hashOfConfig":"23"},{"size":1561,"mtime":1609852647338,"results":"28","hashOfConfig":"23"},{"size":316,"mtime":1608938582832,"results":"29","hashOfConfig":"23"},{"size":1104,"mtime":1609854369331,"results":"30","hashOfConfig":"23"},{"size":422,"mtime":1608939372169,"results":"31","hashOfConfig":"23"},{"size":1910,"mtime":1609309639867,"results":"32","hashOfConfig":"23"},{"size":1493,"mtime":1608939603419,"results":"33","hashOfConfig":"23"},{"size":320,"mtime":1609309398511,"results":"34","hashOfConfig":"23"},{"size":383,"mtime":1609852755817,"results":"35","hashOfConfig":"23"},{"size":116,"mtime":1612794784872,"results":"36","hashOfConfig":"23"},{"size":754,"mtime":1613420302035,"results":"37","hashOfConfig":"23"},{"size":162,"mtime":1613164477031,"results":"38","hashOfConfig":"23"},{"size":272,"mtime":1612987188616,"results":"39","hashOfConfig":"23"},{"size":1644,"mtime":1612986873151,"results":"40","hashOfConfig":"23"},{"size":1442,"mtime":1613163444008,"results":"41","hashOfConfig":"23"},{"size":1229,"mtime":1613420643135,"results":"42","hashOfConfig":"23"},{"size":1234,"mtime":1613420501839,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1a4tlq6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\index.tsx",[],["94","95","96","97","98"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\App.tsx",["99"],"import React from 'react';\nimport SignIn from './pages/Signin';\nimport SignUp from './pages/SignUp';\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nconst App: React.FC = () => (\n  <>\n    <AppProvider>\n      <SignIn />\n    </AppProvider>\n\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\index.tsx",["100"],"import React, { useRef, useCallback } from 'react';\nimport * as Yup from 'yup';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { Container, Content, Background } from './styles';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logoImg from '../../assets/logo.svg';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error);\n\n          formRef.current?.setErrors(errors);\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu login</h1>\n\n          <Input name=\"email\" type=\"text\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            type=\"password\"\n            icon={FiLock}\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"forgot\">Esqueci minha senha</a>\n        </Form>\n\n        <a href=\"login\">\n          <FiLogIn />\n          Criar conta\n        </a>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\index.tsx",["101","102"],"import { useField } from '@unform/core';\nimport React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { IconBaseProps } from 'react-icons/lib';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\index.tsx",["103"],"import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx",["104"],"import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logoImg from '../../assets/logo.svg';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: string) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (error) {\n      const errors = getValidationErrors(error);\n\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" type=\"text\" icon={FiUser} placeholder=\"Nome\" />\n\n          <Input name=\"email\" type=\"text\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            type=\"password\"\n            icon={FiLock}\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"login\">\n          <FiArrowLeft />\n          Voltar para o login\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n",["105","106","107","108","109"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\utils\\getValidationErrors.ts",["110"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx",["111","112"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",["113"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":21},{"ruleId":"124","severity":1,"message":"129","line":3,"column":3,"nodeType":"126","messageId":"127","endLine":3,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":23},{"ruleId":"124","severity":1,"message":"131","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"128","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":21},{"ruleId":"114","replacedBy":"132"},{"ruleId":"116","replacedBy":"133"},{"ruleId":"118","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},{"ruleId":"122","replacedBy":"136"},{"ruleId":"124","severity":1,"message":"137","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"138","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":22},{"ruleId":"124","severity":1,"message":"139","line":4,"column":24,"nodeType":"126","messageId":"127","endLine":4,"endColumn":32},{"ruleId":"124","severity":1,"message":"138","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":22},"lines-around-directive",["140"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","'FormHandles' is defined but never used.","'InputHTMLAttributes' is defined but never used.","'IconBaseProps' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.",["140"],[],[],[],[],"'ValidationError' is defined but never used.","'ToastMessage' is defined but never used.","'useToast' is defined but never used.","padding-line-between-statements"]