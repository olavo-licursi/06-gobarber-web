[{"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\index.tsx":"1","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\App.tsx":"2","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\index.tsx":"4","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\styles.ts":"5","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\index.tsx":"6","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\index.tsx":"7","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\styles.ts":"8","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\styles.ts":"9","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts":"11","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\utils\\getValidationErrors.ts":"12","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx":"13","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\services\\api.ts":"14","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx":"15","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts":"16","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\index.tsx":"17","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\auth.tsx":"18","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\toast.tsx":"19"},{"size":198,"mtime":1608599341133,"results":"20","hashOfConfig":"21"},{"size":403,"mtime":1612987259675,"results":"22","hashOfConfig":"21"},{"size":516,"mtime":1608595910948,"results":"23","hashOfConfig":"21"},{"size":2279,"mtime":1612987634856,"results":"24","hashOfConfig":"21"},{"size":1493,"mtime":1608939489956,"results":"25","hashOfConfig":"21"},{"size":1561,"mtime":1609852647338,"results":"26","hashOfConfig":"21"},{"size":316,"mtime":1608938582832,"results":"27","hashOfConfig":"21"},{"size":1104,"mtime":1609854369331,"results":"28","hashOfConfig":"21"},{"size":422,"mtime":1608939372169,"results":"29","hashOfConfig":"21"},{"size":1910,"mtime":1609309639867,"results":"30","hashOfConfig":"21"},{"size":1493,"mtime":1608939603419,"results":"31","hashOfConfig":"21"},{"size":320,"mtime":1609309398511,"results":"32","hashOfConfig":"21"},{"size":383,"mtime":1609852755817,"results":"33","hashOfConfig":"21"},{"size":116,"mtime":1612794784872,"results":"34","hashOfConfig":"21"},{"size":1136,"mtime":1612984860913,"results":"35","hashOfConfig":"21"},{"size":1293,"mtime":1612985066288,"results":"36","hashOfConfig":"21"},{"size":272,"mtime":1612987188616,"results":"37","hashOfConfig":"21"},{"size":1644,"mtime":1612986873151,"results":"38","hashOfConfig":"21"},{"size":889,"mtime":1612987394212,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1a4tlq6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\index.tsx",[],["86","87","88","89","90"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\App.tsx",["91"],"import React from 'react';\nimport SignIn from './pages/Signin';\nimport SignUp from './pages/SignUp';\nimport GlobalStyle from './styles/global';\n\nimport ToastContainer from './components/ToastContainer';\nimport AppProvider from './hooks';\n\nconst App: React.FC = () => (\n  <>\n    <AppProvider>\n      <SignIn />\n    </AppProvider>\n\n    <ToastContainer />\n\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\index.tsx",["92"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\Signin\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\index.tsx",["93","94"],"import { useField } from '@unform/core';\nimport React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { IconBaseProps } from 'react-icons/lib';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\index.tsx",["95"],"import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx",["96"],"import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logoImg from '../../assets/logo.svg';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: string) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (error) {\n      const errors = getValidationErrors(error);\n\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" type=\"text\" icon={FiUser} placeholder=\"Nome\" />\n\n          <Input name=\"email\" type=\"text\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            type=\"password\"\n            icon={FiLock}\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"login\">\n          <FiArrowLeft />\n          Voltar para o login\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n",["97","98","99","100","101"],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\utils\\getValidationErrors.ts",["102"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\Users\\licur\\Documents\\GitHub\\GoStack\\Nivel02\\06-gobarber-web\\src\\hooks\\toast.tsx",["103","104"],"import React, { createContext, useCallback, useContext } from 'react';\n\nimport ToastContainer from '../components/ToastContainer';\n\ninterface ToastContextData {\n  addToast(): void;\n  removeToast(): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const addToast = useCallback(() => {\n    console.log('addToast');\n  }, []);\n\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"119","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":21},{"ruleId":"115","severity":1,"message":"120","line":3,"column":3,"nodeType":"117","messageId":"118","endLine":3,"endColumn":22},{"ruleId":"115","severity":1,"message":"121","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":23},{"ruleId":"115","severity":1,"message":"122","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"119","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":21},{"ruleId":"105","replacedBy":"123"},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"111","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","severity":1,"message":"128","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":14,"column":5,"nodeType":"131","messageId":"132","endLine":14,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":18,"column":5,"nodeType":"131","messageId":"132","endLine":18,"endColumn":16},"lines-around-directive",["133"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","'FormHandles' is defined but never used.","'InputHTMLAttributes' is defined but never used.","'IconBaseProps' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.",["133"],[],[],[],[],"'ValidationError' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]